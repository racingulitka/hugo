import { useRouter } from "next/router";
import Head from "next/head";
import { Inter } from "next/font/google";
import styles from "./Product.module.scss";
import Header from "@/components/Header/Header";
import Footer from "@/components/Footer/Footer";
import { Page } from "@/components/Header/Header.config";
import React, { useState } from 'react'
import defaultImage1 from './assets/defaultImage1.png'
import { ProductPage } from "./Product.typings";
import BreadCrumbs from "@/components/Product/BreadCrumbs/BreadCrumbs";
import ProductHero from "@/components/Product/ProductHero/ProductHero";
import sampleVideo from '../../../components/Product/ProductHero/assets/sampleVideo.mp4'

const inter = Inter({ subsets: ["latin"] });

export default function PageOfGood() {

  const [goodsArray, setGoodsArray] = useState<ProductPage[]>([
    {
      productId: 1,
      productName:'Renault Duster',
      categoryTitle: 'Транспорт',
      categoryLink:'/shop/vehicles',
      subcategoryTitle: 'Кроссовер',
      subcategoryLink:'/',
      slug:'renault-duster1',
      images:[
        {
          id:1,
          image:defaultImage1,
          isMain:true,
        },
        {
          id:2,
          image:defaultImage1,
          isMain:false,
        },
        {
          id:3,
          image:defaultImage1,
          isMain:false,
        },
      ],
      videoCover:defaultImage1,
      video:sampleVideo,
      rate:4.5,
      reviews:35,
      questions:3,
      characteristics:[
        {
          id:1,
          title:'YTF',
          value:'info',
        },
        {
          id:2,
          title:'YTD',
          value:'info',
        },
        {
          id:3,
          title:'Вершины',
          value:'info',
        },
        {
          id:4,
          title:'Полигоны',
          value:'info',
        },
        {
          id:5,
          title:'Вместительность',
          value:'info',
        },
        {
          id:6,
          title:'Качество интерьера',
          value:'info',
        },
        {
          id:7,
          title:'Тюнинг',
          value:'info',
        },
        {
          id:8,
          title:'Тонировка стёкол',
          value:'info',
        },
        {
          id:9,
          title:'Варианты покраски',
          value:'info',
        },
        {
          id:10,
          title:'Звук двигателя',
          value:'info',
        },
        {
          id:11,
          title:'Зеркала',
          value:'info',
        },
        {
          id:12,
          title:'Руки на руле',
          value:'info',
        },
        {
          id:13,
          title:'Панель приборов',
          value:'info',
        },
        {
          id:14,
          title:'Стекла',
          value:'info',
        },
        {
          id:15,
          title:'Транспортный номер',
          value:'info',
        },
        {
          id:16,
          title:'Пример 1',
          value:'info',
        },
        {
          id:17,
          title:'Пример 2',
          value:'info',
        },
      ],
      price:60000,
      actualPrice:30000,
      isFavourite:false,
      numberOfAddingToFavourites:9,
    },
  ])

  const findSlugItem = () => {
      const foundItem = goodsArray.find(item => item.slug === router.query.slug)
      if (foundItem) return foundItem
  }

  const router = useRouter()
  const itemSlug = findSlugItem()


  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <Header page={Page.shop} />
        {
          itemSlug &&
          <div className={styles.content}>
            <BreadCrumbs
              categoryTitle={itemSlug.categoryTitle}
              categoryLink={itemSlug.categoryLink}
              subcategoryTitle={itemSlug.subcategoryTitle}
              subcategoryLink={itemSlug.subcategoryLink}
              productName={itemSlug.productName}
            />
            <ProductHero
              productInfo={itemSlug}
            />
          </div>
        }
        <Footer />
      </main>
    </>
  );
}
